nmds_a = metaMDS(data_a, distance = "bray")
data_sites <- data.frame(nmds_a$points, t(as.data.frame(strsplit(rownames(nmds_a$points),"_"))))
data_sites <- data_sites %>% mutate(Light = soil_properties_f$light_treatment,
Soil = soil_properties_f$soil)
colnames(data_sites) = c("NMDS1", "NMDS2", "sample", "light_treatment", "soil")
light_color <- c("light" = "darkgoldenrod1", "dark" = "orange4")
sample_shape <- c("DBZ" = 21, "LB" = 22, "LG" = 23, "TL"= 24)
ggnmds_a = ggplot() +
geom_point(data_sites, mapping = aes(x = NMDS1, y = NMDS2, shape = soil, fill = light_treatment), size = 5)+
scale_fill_manual(values = light_color) + scale_shape_manual(values = sample_shape) +
guides(fill = guide_legend(override.aes=list(shape=21)))
data_otus <- as.data.frame(nmds_a$species)
colnames(data_otus) <- c("x", "y")
cna <- as.data.frame(colSums(data_a))
colnames(cna) <- c("sum")
data_otus <- merge(data_otus, cna, by = "row.names", all.x= F, all.y= F)
colnames(data_otus) <- c("otu", "x", "y", "sum")
data_otus <- data_otus %>% mutate(relative_abun = sum / sum(sum) * 100)
data_otus <- data_otus %>% filter(otu %!in% c("Unclassified","Unknown"))
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), alpha = 1/3)
ggnmds_a <- ggnmds_a + theme(axis.text.y = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(colour = "black", face = "bold", size = 12),
legend.text = element_text(size = 12, face ="bold", colour ="black"),
legend.position = "right", axis.title.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 14, colour = "black"),
legend.title = element_text(size = 14, colour = "black", face = "bold"),
panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2),
legend.key=element_blank()) +
labs(x = "NMDS1", fill = "Light Treatment", y = "NMDS2", shape = "Soil Sample", col = "OTU relative abundance")
data_otus <- data_otus %>% filter(relative_abun >= 5)
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), size = 4)
ggnmds_a <-ggnmds_a + geom_text_repel(data_otus,mapping = aes(x,y, label=data_otus$otu), family = "Garamond",
label.padding = 0.4, force = 5, max.iter = 10000, size = 5) +
theme(text=element_text(family="Garamond"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20))
stress <- nmds_a$stress
expl <- grobTree(textGrob("Stress :", x=0.02,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
grob <- grobTree(textGrob(stress, x=0.05,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
ggnmds_a <-ggnmds_a + annotation_custom(grob)
ggnmds_a <-ggnmds_a + annotation_custom(expl)
}
nmds_b_genus <- nmds_a(a_phylum)
x11();print(nmds_b_genus)
ggsave("a_genus_NMDS.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = "cm",
dpi = 300)
nmds_f_genus<-nmds_f(f_genus)
x11(); print(nmds_f_genus)
nmds_g<-nmds_a(a_genus)
nmds_o<-nmds_a(b_genus)
nmds_p<-nmds_a(b_phylum)
x11();ggarrange(nmds_f, nmds_g, nmds_o, nmds_p,
nrow = 2,
ncol = 2,
common.legend = TRUE,
legend = "right",
labels = c("family","genus","order","phylum"),
font.label = list(size = 12), position = "dodge",
hjust = -0.2)
## ANOSIM
ano = anosim(a_order[-7,1:ncol(a_order)], soil_properties$light_treatment, distance = "bray", permutations = 9999)  ## Grouping by light is justified
ano
ano2 = anosim(a_order[-7,1:ncol(a_order)], soil_properties$soil, distance = "bray", permutations = 9999)
ano2
# Algae class
cca_a_class <- graph_cca(a_class)
x11(); print(cca_a_class)
anosim(a_class, soil_properties$light_treatment, distance = "bray", permutations = 9999) ## Grouping by light is justified
anosim(a_class, soil_properties$soil, distance = "bray", permutations = 9999) ## Grouping by soil is justified
adonis2(a_class ~ light_treatment * land_use * sand_content * ph, data = soil_properties) ## All variables have significant effects on communities
nmds_a_class <- nmds_a(a_class)
x11(); print(nmds_a_class)
heat_a_class <- ggplot(a_class, )
library(devtools)
library(devtools)
library(plyr)
library(tidyverse)
library(vegan)
library(devtools)
library(plyr)
library(tidyverse)
library(vegan)
install.packages("tidyverse")
library(labdsv)
install.packages("labdsv")
library(gridExtra)
library(ggpubr)
library(extrafont)
install.packages("extrafont")
library(ggrepel)
library(dada2); packageVersion("dada2")
install.packages("dada2")
BiocManager::install("dada2", version = "3.10")
BiocManager::install("dada2")
library(dada2); packageVersion("dada2")
library(phyloseq)
library(esquisse)
font_import()
y
loadfonts()
font_import(pattern = "Garamond.ttf")
y
mothur
qiime2
dada2
## Packages I need to look at ##
circlize  #https://jokergoo.github.io/circlize_book/book/
## Data import ##
soil_properties <- read.csv("soil_properties.csv",
dec = ".",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1,
check.names = FALSE)
soil_properties_f <- read.csv("soil_properties_fungi.csv",  ## avec LG6 en moins
dec = ".",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1,
check.names = FALSE)
#algae
a_class <- read.csv("algae/algae_class.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_family <- read.csv("algae/algae_family.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_genus <- read.csv("algae/algae_genus.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_order <- read.csv("algae/algae_order.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_phylum <- read.csv("algae/algae_phylum.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_subclass <- read.csv("algae/algae_subclass.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_suborder <- read.csv("algae/algae_suborder.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
a_subphylum <- read.csv("algae/algae_subphylum.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
#bacteria
b_class <- read.csv("bacteria/bacteria_class.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
b_family <- read.csv("bacteria/bacteria_genus.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
b_genus <- read.csv("bacteria/bacteria_family.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
b_order <- read.csv("bacteria/bacteria_order.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
b_phylum <- read.csv("bacteria/bacteria_phylum.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
#fungi
f_class <- read.csv("fungi/fungi_class.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_family <- read.csv("fungi/fungi_family.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_genus <- read.csv("fungi/fungi_genus.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_order <- read.csv("fungi/fungi_order.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_phylum <- read.csv("fungi/fungi_phylum.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_subclass <- read.csv("fungi/fungi_subclass.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_subfamily <- read.csv("fungi/fungi_subfamily.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_suborder <- read.csv("fungi/fungi_suborder.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
f_subphylum <- read.csv("fungi/fungi_subphylum.csv",
dec = ",",
sep = ";",
fileEncoding="UTF-8-BOM",
row.names = 1)
##figures
# Analyse canonique des correspondances
## Sans ggplot ################################
data_cca
data_cca_plot <- plot(data_cca) ## species are shown in red cross and samples as black circles.
colvec<-c("brown", "yellow")
data_fit <- envfit(data_cca~land_use + ph+cn_ratio+sand_content+clay_content, soil_properties, perm = 1000)
plot(data_cca, main="Algea Genus", type="n")
with(soil_properties, points(data_cca,display="sites",col=colvec[light_treatment], cex=1.2, pch=21, bg=colvec[light_treatment]))
text(data_cca, display="species", cex=0.5, col="gray0")
with(soil_properties, legend("topright", legend=levels(light_treatment), col=colvec, pch=21, pt.bg=colvec))
plot(data_fit, cex=1.0, axis=TRUE)
?scores
###### FUNCTION TO PRODUCE GRAPHICS ##
## CCA
graph_cca <- function(data) {
data_log <- data %>% decostand("log")
data_cca <- cca(data_log ~ land_use * sand_content * ph * silt_content * cn_ratio, data = soil_properties)
data_scrs <- scores(data_cca, display = c("sp","wa","lc","bp","cn"))
data_sites <- data.frame(data_scrs$sites, t(as.data.frame(strsplit(rownames(data_scrs$sites),"_"))))
data_sites <- cbind(data_sites, soil_properties[,1])  # to add light treatment
colnames(data_sites) <- c("x", "y", "soil", "light_treatment")
data_sites <- data_sites %>%  mutate(sample = case_when(soil == "DBZ1"|soil == "DBZ2"|soil == "DBZ3"|soil == "DBZ4"|soil == "DBZ5"|soil == "DBZ6" ~ "DBZ",
soil == "LB1"|soil == "LB2"|soil == "LB3"|soil == "LB4"|soil == "LB5"|soil == "LB6" ~ "LB",
soil == "LG1"|soil == "LG2"|soil == "LG3"|soil == "LG4"|soil == "LG5"|soil == "LG6" ~ "LG",
soil == "TL1"|soil == "TL2"|soil == "TL3"|soil == "TL4"|soil == "TL5"|soil == "TL6" ~ "TL"))
light_color <- c("light" = "darkgoldenrod1", "dark" = "orange4")
sample_shape <- c("DBZ" = 21, "LB" = 22, "LG" = 23, "TL"= 24)
data_plot <- ggplot()
data_plot <- data_plot + geom_point(data = data_sites, aes(x, y, fill = light_treatment, shape = sample), size = 5) +
scale_fill_manual(values = light_color) + scale_shape_manual(values = sample_shape) +
guides(fill = guide_legend(override.aes=list(shape=21)))  ## SOIL SAMPLE
data_biplots <- ordiArrowMul(data_scrs$biplot)
data_arrows <- data_scrs$biplot * data_biplots
colnames(data_arrows) <- c("x", "y")
data_arrows <- as.data.frame(data_arrows)
data_plot <- data_plot + geom_segment(data_arrows, mapping = aes(x=0, y=0, xend = x, yend = y),
arrow = arrow(length = unit(0.2, "cm"))) ## ARROWS
data_plot <- data_plot + geom_text_repel(as.data.frame(data_arrows * 1.1),
mapping = aes(x, y, label = rownames(data_arrows), family = "Garamond"), size = 8.5)## ARROWS LABELS
data_otus <- as.data.frame(data_scrs$species)
colnames(data_otus) <- c("x", "y")
cna <- as.data.frame(colSums(data))
colnames(cna) <- c("sum")
data_otus <- merge(data_otus, cna, by = "row.names", all.x= F, all.y= F)
colnames(data_otus) <- c("otu", "x", "y", "sum")
data_otus <- data_otus %>% mutate(relative_abun = sum / sum(sum) * 100)
data_otus <- data_otus %>% filter(otu %!in% c("Unclassified","Unknown"))
data_plot <- data_plot + geom_point(data_otus, mapping = aes(x, y, col = relative_abun)) ## OTU POINTS
data_plot <- data_plot + theme_bw() +
labs(x = "CCA1", colour = "OTU relative abundance (%)", y = "CCA2", shape = "Soil Sample", fill = "Light treatment") +
scale_color_gradient(low = "gold", high = "firebrick1")
data_otus <- data_otus %>% filter(relative_abun >= 5)
data_plot <- data_plot + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), size = 4)
data_plot<-data_plot + geom_text_repel(data_otus,mapping = aes(x,y, label=data_otus$otu), family = "Garamond", max.iter = 10000, size = 5) +
theme(text=element_text(family="Garamond"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20))
}
a=graph_cca(a_genus)
x11();print(a)
graph_cca_f <- function(data) {
data_log <- data %>% decostand("log")
data_cca <- cca(data_log ~ land_use * sand_content * ph * silt_content * cn_ratio, data = soil_properties_f)
data_scrs <- scores(data_cca, display = c("sp","wa","lc","bp","cn"))
data_sites <- data.frame(data_scrs$sites, t(as.data.frame(strsplit(rownames(data_scrs$sites),"_"))))
data_sites <- cbind(data_sites, soil_properties_f[,1])  # to add light treatment
colnames(data_sites) <- c("x", "y", "soil", "light_treatment")
data_sites <- data_sites %>%  mutate(sample = case_when(soil == "DBZ1"|soil == "DBZ2"|soil == "DBZ3"|soil == "DBZ4"|soil == "DBZ5"|soil == "DBZ6" ~ "DBZ",
soil == "LB1"|soil == "LB2"|soil == "LB3"|soil == "LB4"|soil == "LB5"|soil == "LB6" ~ "LB",
soil == "LG1"|soil == "LG2"|soil == "LG3"|soil == "LG4"|soil == "LG5"|soil == "LG6" ~ "LG",
soil == "TL1"|soil == "TL2"|soil == "TL3"|soil == "TL4"|soil == "TL5"|soil == "TL6" ~ "TL"))
light_color <- c("light" = "darkgoldenrod1", "dark" = "orange4")
sample_shape <- c("DBZ" = 21, "LB" = 22, "LG" = 23, "TL"= 24)
data_plot <- ggplot()
data_plot <- data_plot + geom_point(data = data_sites, aes(x, y, fill = light_treatment, shape = sample), size = 5) +
scale_fill_manual(values = light_color) + scale_shape_manual(values = sample_shape) +
guides(fill = guide_legend(override.aes=list(shape=21)))  ## SOIL SAMPLE
data_biplots <- ordiArrowMul(data_scrs$biplot)
data_arrows <- data_scrs$biplot * data_biplots
colnames(data_arrows) <- c("x", "y")
data_arrows <- as.data.frame(data_arrows)
data_plot <- data_plot + geom_segment(data_arrows, mapping = aes(x=0, y=0, xend = x, yend = y),
arrow = arrow(length = unit(0.2, "cm"))) ## ARROWS
data_plot <- data_plot + geom_text_repel(as.data.frame(data_arrows * 1.1),
mapping = aes(x, y, label = rownames(data_arrows), family = "Garamond"), size = 8.5)## ARROWS LABELS
data_otus <- as.data.frame(data_scrs$species)
colnames(data_otus) <- c("x", "y")
cna <- as.data.frame(colSums(data))
colnames(cna) <- c("sum")
data_otus <- merge(data_otus, cna, by = "row.names", all.x= F, all.y= F)
colnames(data_otus) <- c("otu", "x", "y", "sum")
data_otus <- data_otus %>% mutate(relative_abun = sum / sum(sum) * 100)
data_otus <- data_otus %>% filter(otu %!in% c("Unclassified","Unknown"))
data_plot <- data_plot + geom_point(data_otus, mapping = aes(x, y, col = relative_abun)) ## OTU POINTS
data_plot <- data_plot + theme_bw() +
labs(x = "CCA1", colour = "OTU relative abundance (%)", y = "CCA2", shape = "Soil Sample", fill = "Light treatment") +
scale_color_gradient(low = "gold", high = "firebrick1")
data_otus <- data_otus %>% filter(relative_abun >= 5)
data_plot <- data_plot + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), size = 4)
data_plot<-data_plot + geom_text_repel(data_otus,mapping = aes(x,y, label=data_otus$otu), family = "Garamond", max.iter = 10000, size = 5) +
theme(text=element_text(family="Garamond"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20))
}
gga_genus<-graph_cca(a_genus)
ggf_genus<-graph_cca_f(f_genus)
ggb_genus<-graph_cca(b_genus)
ggb_phylum<-graph_cca(b_phylum)
ggarrange(gga_genus, ggf_genus, ggb_genus, ggb_phylum, common.legend = TRUE,
legend = "right",
labels = c("Algae genus", "Fungi genus", "Bacteria genus", "Bacteria phylum"))
x11();print(gga_genus)
x11();print(ggf_genus)
x11();print(ggb_genus)
x11();print(ggb_phylum)
ggsave("algalCCA.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = "cm",
dpi = 300)
?savePlot
data_algae_plot<-data_algae_plot+geom_text(data=data_algae_species,aes(x,y,label=rownames(data_algae_species))) ## to add species text
a1<-graph_cca(a_class)
a2<-graph_cca(f_genus)
a3<-graph_cca(data)
a4<-graph_cca(a_order)
a5<-graph_cca(a_phylum)
a6<-graph_cca(a_subclass)
a7<-graph_cca(a_suborder)
a8<-graph_cca(a_subphylum)
fonttable()
ggarrange(a1,a2,a3,a4,a5,a6,a7,a8, common.legend = TRUE,
legend = "right",
labels = c("class", "family", "genus", "order", "phylum", "subclass", "suborder", "subphylum"))
?ggarrange
## NMDS
nmds_a <- function(data_a) {
data_a = as.matrix(data_a)
nmds_a = metaMDS(data_a, distance = "bray")
data_sites <- data.frame(nmds_a$points, t(as.data.frame(strsplit(rownames(nmds_a$points),"_"))))
data_sites <- data_sites %>% mutate(Light = soil_properties$light_treatment,
Soil = soil_properties$soil)
colnames(data_sites) = c("NMDS1", "NMDS2", "sample", "light_treatment", "soil")
light_color <- c("light" = "darkgoldenrod1", "dark" = "orange4")
sample_shape <- c("DBZ" = 21, "LB" = 22, "LG" = 23, "TL"= 24)
ggnmds_a = ggplot() +
geom_point(data_sites, mapping = aes(x = NMDS1, y = NMDS2, shape = soil, fill = light_treatment), size = 5)+
scale_fill_manual(values = light_color) + scale_shape_manual(values = sample_shape) +
guides(fill = guide_legend(override.aes=list(shape=21)))
data_otus <- as.data.frame(nmds_a$species)
colnames(data_otus) <- c("x", "y")
cna <- as.data.frame(colSums(data_a))
colnames(cna) <- c("sum")
data_otus <- merge(data_otus, cna, by = "row.names", all.x= F, all.y= F)
colnames(data_otus) <- c("otu", "x", "y", "sum")
data_otus <- data_otus %>% mutate(relative_abun = sum / sum(sum) * 100)
data_otus <- data_otus %>% filter(otu %!in% c("Unclassified","Unknown"))
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), alpha = 1/3)
ggnmds_a <- ggnmds_a + theme(axis.text.y = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(colour = "black", face = "bold", size = 12),
legend.text = element_text(size = 12, face ="bold", colour ="black"),
legend.position = "right", axis.title.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 14, colour = "black"),
legend.title = element_text(size = 14, colour = "black", face = "bold"),
panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2),
legend.key=element_blank()) +
labs(x = "NMDS1", fill = "Light Treatment", y = "NMDS2", shape = "Soil Sample", col = "OTU relative abundance")
data_otus <- data_otus %>% filter(relative_abun >= 5)
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), size = 4)
ggnmds_a <-ggnmds_a + geom_text_repel(data_otus,mapping = aes(x,y, label=data_otus$otu), family = "Garamond",
label.padding = 0.4, force = 5, max.iter = 10000, size = 5) +
theme(text=element_text(family="Garamond"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20))
stress <- nmds_a$stress
expl <- grobTree(textGrob("Stress :", x=0.02,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
grob <- grobTree(textGrob(stress, x=0.05,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
ggnmds_a <-ggnmds_a + annotation_custom(grob)
ggnmds_a <-ggnmds_a + annotation_custom(expl)
}
nmds_f <- function(data_a) {
data_a = as.matrix(data_a)
nmds_a = metaMDS(data_a, distance = "bray")
data_sites <- data.frame(nmds_a$points, t(as.data.frame(strsplit(rownames(nmds_a$points),"_"))))
data_sites <- data_sites %>% mutate(Light = soil_properties_f$light_treatment,
Soil = soil_properties_f$soil)
colnames(data_sites) = c("NMDS1", "NMDS2", "sample", "light_treatment", "soil")
light_color <- c("light" = "darkgoldenrod1", "dark" = "orange4")
sample_shape <- c("DBZ" = 21, "LB" = 22, "LG" = 23, "TL"= 24)
ggnmds_a = ggplot() +
geom_point(data_sites, mapping = aes(x = NMDS1, y = NMDS2, shape = soil, fill = light_treatment), size = 5)+
scale_fill_manual(values = light_color) + scale_shape_manual(values = sample_shape) +
guides(fill = guide_legend(override.aes=list(shape=21)))
data_otus <- as.data.frame(nmds_a$species)
colnames(data_otus) <- c("x", "y")
cna <- as.data.frame(colSums(data_a))
colnames(cna) <- c("sum")
data_otus <- merge(data_otus, cna, by = "row.names", all.x= F, all.y= F)
colnames(data_otus) <- c("otu", "x", "y", "sum")
data_otus <- data_otus %>% mutate(relative_abun = sum / sum(sum) * 100)
data_otus <- data_otus %>% filter(otu %!in% c("Unclassified","Unknown"))
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), alpha = 1/3)
ggnmds_a <- ggnmds_a + theme(axis.text.y = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(colour = "black", face = "bold", size = 12),
legend.text = element_text(size = 12, face ="bold", colour ="black"),
legend.position = "right", axis.title.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 14, colour = "black"),
legend.title = element_text(size = 14, colour = "black", face = "bold"),
panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2),
legend.key=element_blank()) +
labs(x = "NMDS1", fill = "Light Treatment", y = "NMDS2", shape = "Soil Sample", col = "OTU relative abundance")
data_otus <- data_otus %>% filter(relative_abun >= 5)
ggnmds_a <- ggnmds_a + geom_point(data_otus, mapping = aes(x, y, col = relative_abun), size = 4)
ggnmds_a <-ggnmds_a + geom_text_repel(data_otus,mapping = aes(x,y, label=data_otus$otu), family = "Garamond",
label.padding = 0.4, force = 5, max.iter = 10000, size = 5) +
theme(text=element_text(family="Garamond"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20))
stress <- nmds_a$stress
expl <- grobTree(textGrob("Stress :", x=0.02,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
grob <- grobTree(textGrob(stress, x=0.05,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=13, fontface="italic", family = "Garamond")))
ggnmds_a <-ggnmds_a + annotation_custom(grob)
ggnmds_a <-ggnmds_a + annotation_custom(expl)
}
nmds_b_genus <- nmds_a(a_phylum)
x11();print(nmds_b_genus)
ggsave("a_genus_NMDS.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = "cm",
dpi = 300)
nmds_f_genus<-nmds_f(f_genus)
x11(); print(nmds_f_genus)
nmds_g<-nmds_a(a_genus)
nmds_o<-nmds_a(b_genus)
nmds_p<-nmds_a(b_phylum)
x11();ggarrange(nmds_f, nmds_g, nmds_o, nmds_p,
nrow = 2,
ncol = 2,
common.legend = TRUE,
legend = "right",
labels = c("family","genus","order","phylum"),
font.label = list(size = 12), position = "dodge",
hjust = -0.2)
## ANOSIM
ano = anosim(a_order[-7,1:ncol(a_order)], soil_properties$light_treatment, distance = "bray", permutations = 9999)  ## Grouping by light is justified
ano
ano2 = anosim(a_order[-7,1:ncol(a_order)], soil_properties$soil, distance = "bray", permutations = 9999)
ano2
library(devtools)
library(plyr)
library(tidyverse)
library(vegan)
library(labdsv)
library(gridExtra)
library(ggpubr)
library(extrafont)
library(ggrepel)
library(dada2); packageVersion("dada2")
`%!in%` <- function(a,b) ! a %in% b
library(grid)
library(phyloseq)
library(esquisse)
library(devtools)
library(plyr)
library(tidyverse)
library(vegan)
library(labdsv)
library(gridExtra)
library(ggpubr)
library(extrafont)
library(ggrepel)
install.packages("rlang")
library(tidyverse)
install.packages("tidyverse")
